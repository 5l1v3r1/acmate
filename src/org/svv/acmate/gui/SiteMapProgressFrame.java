package org.svv.acmate.gui;

import java.awt.Rectangle;

import javax.swing.JOptionPane;

import org.svv.acmate.burpsuite.ISiteMapProgressListener;
import org.svv.acmate.burpsuite.SiteMap;

/**
 *
 * @author cdnguyen
 */
public class SiteMapProgressFrame extends javax.swing.JFrame implements ISiteMapProgressListener {
	
	private int totalLoad;
	private SiteMap siteMap;

    /**
     * Creates new form SiteMapProgressFrame
     */
    public SiteMapProgressFrame(SiteMap siteMap) {
    	initComponents();
    	
    	this.siteMap = siteMap;
    	siteMap.registerSiteMapLoadingListener(this);

    	setDefaultCloseOperation(DISPOSE_ON_CLOSE);
//        setModal(false);
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblInfo = new javax.swing.JLabel();
        probarLoading = new javax.swing.JProgressBar();
        bttnCancel = new javax.swing.JButton();

        lblInfo.setText("Loading ... requests");

        bttnCancel.setText("Cancel");
        bttnCancel.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bttnCancel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblInfo)
                        .addComponent(probarLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(lblInfo)
                .addGap(18, 18, 18)
                .addComponent(probarLoading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bttnCancel)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnCancelActionPerformed
        JOptionPane.showMessageDialog(this, "Not yet implemented, please wait until the loading is completed!");
    }//GEN-LAST:event_bttnCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnCancel;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JProgressBar probarLoading;
    // End of variables declaration//GEN-END:variables
	
    @Override
	public void start(int totalLoad) {
    	this.totalLoad = totalLoad;
    	probarLoading.setMinimum(0);
		probarLoading.setMaximum(totalLoad);
		lblInfo.setText("Processing " + String.valueOf(totalLoad) + " requests ...");
		repaint();
	}

	@Override
	public void progress(int loaded) {
		probarLoading.setValue(loaded);
		probarLoading.setString(String.valueOf(loaded) + " / " + String.valueOf(totalLoad) );
		Rectangle rec = probarLoading.getBounds();
		repaint(rec.x, rec.y, rec.width, rec.height);
	}

	@Override
	public void done() {
		// FIXME: deregister from sitemap
//		siteMap.deregisterSiteMapLoadingListener(this);
		dispose();
	}
	
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.svv.acmate.gui;

import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;

import javax.swing.JOptionPane;
import org.svv.acmate.model.filters.ContentPattern;
import org.svv.acmate.model.filters.Filter;
import org.svv.acmate.model.filters.MethodPattern;
import org.svv.acmate.model.filters.StatusCodePattern;
import org.svv.acmate.model.filters.URLPattern;


/**
 *
 * @author cdnguyen
 */
public class FilterDialog extends javax.swing.JDialog {
	
	private int selectedOption = JOptionPane.OK_OPTION;
	private Filter filter;
	
	public Filter getFilter() {
		return filter;
	}

	public int getSelectedOption() {
		return selectedOption;
	}


	/**
     * Creates new form FilterDialog from a filter object
     */
    public FilterDialog(Filter item) {
    	
        initComponents();
        
        setTitle("Update a filter");
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setModal(true);
        
        this.filter = item;
        bttnAdd.setText("Update");
        
        setValues();
    }
    
    
    /**
     * Creates new form FilterDialog
     */
    public FilterDialog() {
        initComponents();
        
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setModal(true);
        setTitle("Add a new filter");
        filter = new Filter();
    }
    
    /**
     * Set values to controls
     */
    private void setValues(){
    	
    	if (filter.getContentPattern() != null){
    		txtContentPattern.setText(filter.getContentPattern().getValue());
    		cboxContentMatched.setSelected(filter.getContentPattern().isMatched());
    	}
    	
    	if (filter.getStatusCodePattern() != null){
    		txtHTTPCodePattern.setText(filter.getStatusCodePattern().getValue());
    		cboxCodeMatched.setSelected(filter.getStatusCodePattern().isMatched());
    	}
    	
    	if (filter.getMethodPattern() != null){
    		txtHttpMethod.setText(filter.getMethodPattern().getValue());
    		cboxMethodMatched.setSelected(filter.getMethodPattern().isMatched());
    	}
    	
    	if (filter.getURLPattern() != null){
    		txtUrlPattern.setText(filter.getURLPattern().getValue());
    		cboxUrlMatched.setSelected(filter.getURLPattern().isMatched());
    	}
    	
        if (Filter.FILTER_PERMISSION_ALLOWED.equals(filter.getPermission()))
        	comboPermission.setSelectedIndex(0);
        else
        	comboPermission.setSelectedIndex(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtUrlPattern = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtHTTPCodePattern = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        bttnAdd = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtHttpMethod = new javax.swing.JTextField();
        txtContentPattern = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        comboPermission = new javax.swing.JComboBox();
        bttnCancel = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cboxUrlMatched = new javax.swing.JCheckBox();
        cboxMethodMatched = new javax.swing.JCheckBox();
        cboxCodeMatched = new javax.swing.JCheckBox();
        cboxContentMatched = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();

        jCheckBox1.setText("jCheckBox1");

        jLabel1.setText("URL Pattern: ");

        jLabel2.setText("HTTP Code Pattern:");

        jLabel3.setText("Content Pattern:");

        bttnAdd.setText("Add");
        bttnAdd.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnAddActionPerformed(evt);
            }
        });

        jLabel4.setText("HTTP Method:");

        jLabel5.setText("Permission:");

        comboPermission.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Allowed", "Denied" }));
        comboPermission.setToolTipText("");

        bttnCancel.setText("Cancel");
        bttnCancel.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnCancelActionPerformed(evt);
            }
        });

        jLabel6.setText("Use Java Regular Expressions, leave textboxes blank if not applicable");

        cboxUrlMatched.setText("Matched");
        cboxUrlMatched.setToolTipText("Uncheck if the pattern should not match");

        cboxMethodMatched.setText("Matched");
        cboxMethodMatched.setToolTipText("Uncheck if the pattern should not match");

        cboxCodeMatched.setText("Matched");
        cboxCodeMatched.setToolTipText("Uncheck if the pattern should not match");

        cboxContentMatched.setText("Matched");
        cboxContentMatched.setToolTipText("Uncheck if the pattern should not match");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUrlPattern)
                            .addComponent(txtHttpMethod)
                            .addComponent(txtHTTPCodePattern, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtContentPattern)
                            .addComponent(comboPermission, 0, 284, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboxUrlMatched)
                                    .addComponent(cboxMethodMatched, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addComponent(cboxCodeMatched, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(cboxContentMatched, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bttnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bttnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 89, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtUrlPattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboxUrlMatched))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtHttpMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboxMethodMatched)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtHTTPCodePattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxCodeMatched))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtContentPattern, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxContentMatched))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboPermission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnAdd)
                    .addComponent(bttnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        


    private void bttnAddActionPerformed(java.awt.event.ActionEvent evt) {   
    	
    	
    	boolean contentMatched = cboxContentMatched.isSelected();
    	String regx = txtContentPattern.getText();
    	if (checkJavaRegx(regx)){
    		if (filter.getContentPattern() == null){
    			ContentPattern content = new ContentPattern();
	    		content.setValue(regx);
	    		content.setMatched(contentMatched);
	    		filter.setContentPattern(content);
    		} else {
    			filter.getContentPattern().setMatched(contentMatched);
    			filter.getContentPattern().setValue(regx);
    		}
    	}
    	
    	contentMatched = cboxMethodMatched.isSelected();
    	regx = txtHttpMethod.getText();
    	
    	if (checkJavaRegx(regx)){
    		if (filter.getMethodPattern() == null){
    			MethodPattern p = new MethodPattern();
	    		p.setValue(regx);
	    		p.setMatched(contentMatched);
	    		filter.setMethodPattern(p);
    		} else {
    			filter.getMethodPattern().setMatched(contentMatched);
    			filter.getMethodPattern().setValue(regx);
    		}
    	}
        
        contentMatched = cboxUrlMatched.isSelected();
    	regx = txtUrlPattern.getText();
    	
    	if (checkJavaRegx(regx)){
    		if (filter.getURLPattern() == null){
    			URLPattern p = new URLPattern();
	    		p.setValue(regx);
	    		p.setMatched(contentMatched);
	    		filter.setURLPattern(p);
    		} else {
    			filter.getURLPattern().setMatched(contentMatched);
    			filter.getURLPattern().setValue(regx);
    		}
    	}
        
        contentMatched = cboxCodeMatched.isSelected();
    	regx = txtHTTPCodePattern.getText();
    	
    	if (checkJavaRegx(regx)){
    		if (filter.getStatusCodePattern() == null){
    			StatusCodePattern p = new StatusCodePattern();
	    		p.setValue(regx);
	    		p.setMatched(contentMatched);
	    		filter.setStatusCodePattern(p);
    		} else {
    			filter.getStatusCodePattern().setMatched(contentMatched);
    			filter.getStatusCodePattern().setValue(regx);
    		}
    	}
        
        
        if (comboPermission.getSelectedIndex() == 0){
        	filter.setPermission(Filter.FILTER_PERMISSION_ALLOWED);
        } else 
        	filter.setPermission(Filter.FILTER_PERMISSION_DENIED);
        
        selectedOption = JOptionPane.OK_OPTION;
        this.setVisible(false);
    }     
    
    /**
     * 
     * @param regx
     */
    private boolean checkJavaRegx(String regex){
    	
    	if (regex == null || regex.isEmpty())
    		return true;
    	
    	try {
    		Pattern.compile(regex);
    	} catch (PatternSyntaxException e){
    		JOptionPane.showMessageDialog(this, "Pattern: " + regex + " is not an accepted Java Regular Expression!");
    		return false;
    	}
    	
    	return true;
    	
    }

    private void bttnCancelActionPerformed(java.awt.event.ActionEvent evt) {        
    	selectedOption = JOptionPane.CANCEL_OPTION;
    	this.setVisible(false);
    }                                          
   
    private javax.swing.JButton bttnAdd;
    private javax.swing.JButton bttnCancel;
    private javax.swing.JCheckBox cboxCodeMatched;
    private javax.swing.JCheckBox cboxContentMatched;
    private javax.swing.JCheckBox cboxMethodMatched;
    private javax.swing.JCheckBox cboxUrlMatched;
    private javax.swing.JComboBox comboPermission;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField txtContentPattern;
    private javax.swing.JTextField txtHTTPCodePattern;
    private javax.swing.JTextField txtHttpMethod;
    private javax.swing.JTextField txtUrlPattern;
}
